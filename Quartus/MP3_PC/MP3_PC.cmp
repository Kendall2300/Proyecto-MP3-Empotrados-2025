	component MP3_PC is
		port (
			audio_config_SDAT             : inout std_logic                     := 'X';             -- SDAT
			audio_config_SCLK             : out   std_logic;                                        -- SCLK
			audio_external_BCLK           : in    std_logic                     := 'X';             -- BCLK
			audio_external_DACDAT         : out   std_logic;                                        -- DACDAT
			audio_external_DACLRCK        : in    std_logic                     := 'X';             -- DACLRCK
			audio_pll_clk_clk             : out   std_logic;                                        -- clk
			buttons_export_export         : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			clk_clk                       : in    std_logic                     := 'X';             -- clk
			hps_h2f_mpu_events_eventi     : in    std_logic                     := 'X';             -- eventi
			hps_h2f_mpu_events_evento     : out   std_logic;                                        -- evento
			hps_h2f_mpu_events_standbywfe : out   std_logic_vector(1 downto 0);                     -- standbywfe
			hps_h2f_mpu_events_standbywfi : out   std_logic_vector(1 downto 0);                     -- standbywfi
			hps_io_hps_io_sdio_inst_CMD   : inout std_logic                     := 'X';             -- hps_io_sdio_inst_CMD
			hps_io_hps_io_sdio_inst_D0    : inout std_logic                     := 'X';             -- hps_io_sdio_inst_D0
			hps_io_hps_io_sdio_inst_D1    : inout std_logic                     := 'X';             -- hps_io_sdio_inst_D1
			hps_io_hps_io_sdio_inst_CLK   : out   std_logic;                                        -- hps_io_sdio_inst_CLK
			hps_io_hps_io_sdio_inst_D2    : inout std_logic                     := 'X';             -- hps_io_sdio_inst_D2
			hps_io_hps_io_sdio_inst_D3    : inout std_logic                     := 'X';             -- hps_io_sdio_inst_D3
			memory_mem_a                  : out   std_logic_vector(12 downto 0);                    -- mem_a
			memory_mem_ba                 : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck                 : out   std_logic;                                        -- mem_ck
			memory_mem_ck_n               : out   std_logic;                                        -- mem_ck_n
			memory_mem_cke                : out   std_logic;                                        -- mem_cke
			memory_mem_cs_n               : out   std_logic;                                        -- mem_cs_n
			memory_mem_ras_n              : out   std_logic;                                        -- mem_ras_n
			memory_mem_cas_n              : out   std_logic;                                        -- mem_cas_n
			memory_mem_we_n               : out   std_logic;                                        -- mem_we_n
			memory_mem_reset_n            : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq                 : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- mem_dq
			memory_mem_dqs                : inout std_logic                     := 'X';             -- mem_dqs
			memory_mem_dqs_n              : inout std_logic                     := 'X';             -- mem_dqs_n
			memory_mem_odt                : out   std_logic;                                        -- mem_odt
			memory_mem_dm                 : out   std_logic;                                        -- mem_dm
			memory_oct_rzqin              : in    std_logic                     := 'X';             -- oct_rzqin
			pll_vga_locked_export         : out   std_logic;                                        -- export
			reset_reset_n                 : in    std_logic                     := 'X';             -- reset_n
			seven_seg_export              : out   std_logic_vector(27 downto 0);                    -- export
			switchs_export                : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- export
			vga_controller_CLK            : out   std_logic;                                        -- CLK
			vga_controller_HS             : out   std_logic;                                        -- HS
			vga_controller_VS             : out   std_logic;                                        -- VS
			vga_controller_BLANK          : out   std_logic;                                        -- BLANK
			vga_controller_SYNC           : out   std_logic;                                        -- SYNC
			vga_controller_R              : out   std_logic_vector(7 downto 0);                     -- R
			vga_controller_G              : out   std_logic_vector(7 downto 0);                     -- G
			vga_controller_B              : out   std_logic_vector(7 downto 0)                      -- B
		);
	end component MP3_PC;

